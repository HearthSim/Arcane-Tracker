buildscript {
    ext.kotlin_version = '1.1.0'
    repositories {
        maven {url "https://maven.google.com"}
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath 'com.google.gms:google-services:3.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'me.tatarka:gradle-retrolambda:3.6.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    defaultConfig {
        applicationId "net.mbonnin.arcanetracker"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 215
        versionName "2.15"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        mbonnin {
            keyAlias 'mbonnin'
            keyPassword 'password'
            storeFile file('keystore.jks')
            storePassword 'password'
            // sha1: 46:AF:3F:32:C0:F9:9C:EA:29:4E:F0:73:4D:2F:73:0B:E4:40:BB:7C
        }
    }

    lintOptions {
        abortOnError false
    }

    dataBinding {
        enabled = true
    }

    def props = new Properties()
    def f = project.file("keystore.properties");
    if (f.exists()) {
        props.load(new FileInputStream(f))

        signingConfigs.mbonnin.storeFile project.file(props.keyStore)
        signingConfigs.mbonnin.storePassword props.keyStorePassword
        signingConfigs.mbonnin.keyAlias props.keyAlias
        signingConfigs.mbonnin.keyPassword props.keyAliasPassword
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if(f.exists()) {
                signingConfig signingConfigs.mbonnin
            }
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if(f.exists()) {
                signingConfig signingConfigs.mbonnin
            }
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    lintOptions {
        lintConfig file('lint.xml')
        checkReleaseBuilds false
    }

    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
    }
}

ext {
    supportLibVersion = '25.4.0'
    playServicesVersion = '11.0.1'
}

repositories {
    jcenter()
    maven {url "https://maven.google.com"}
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile "com.android.support:support-v4:$supportLibVersion"
    compile "com.android.support:appcompat-v7:$supportLibVersion"
    compile "com.android.support:design:$supportLibVersion"
    compile "com.android.support:recyclerview-v7:$supportLibVersion"
    compile "com.android.support:cardview-v7:$supportLibVersion"

    compile "com.android.support.constraint:constraint-layout:1.0.2"

    compile 'com.google.code.gson:gson:2.8.1'
    compile 'io.paperdb:paperdb:1.5'
    compile 'com.squareup.okhttp3:okhttp:3.7.0'

    compile 'com.jakewharton.timber:timber:4.5.1'
    compile 'com.annimon:stream:1.1.5'

    compile 'io.reactivex:rxjava:1.3.0'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'

    compile "com.google.android.gms:play-services-auth:$playServicesVersion"
    compile "com.google.firebase:firebase-core:$playServicesVersion"
    compile "com.google.firebase:firebase-crash:$playServicesVersion"

    compile 'com.android.support:multidex:1.0.1'
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
    compile 'com.squareup.picasso:picasso:2.5.2'

    compile "com.google.firebase:firebase-messaging:$playServicesVersion"

    testCompile 'junit:junit:4.12'
    compile 'com.android.support:multidex:1.0.1'
}

if (!file('google-services.json').exists()){
    println 'copying google-services.json.mock'
    copy {
        from("./")
        into("./")
        include("google-services.json.mock")
        rename { String fileName ->
            fileName.replace('.mock', '')
        }
    }
}

apply plugin: 'com.google.gms.google-services'
